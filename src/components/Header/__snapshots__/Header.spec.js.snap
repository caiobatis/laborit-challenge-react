// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Header Component should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Header
    title="lab"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <header>
        <div
          className="container"
        >
          <div
            className="brand"
          >
            <h1
              className="h1"
            >
              lab
              <sub>
                Challenge
              </sub>
            </h1>
          </div>
        </div>
      </header>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="container"
        >
          <div
            className="brand"
          >
            <h1
              className="h1"
            >
              lab
              <sub>
                Challenge
              </sub>
            </h1>
          </div>
        </div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="brand"
          >
            <h1
              className="h1"
            >
              lab
              <sub>
                Challenge
              </sub>
            </h1>
          </div>,
          "className": "container",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <h1
              className="h1"
            >
              lab
              <sub>
                Challenge
              </sub>
            </h1>,
            "className": "brand",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "lab",
                <sub>
                  Challenge
                </sub>,
              ],
              "className": "h1",
            },
            "ref": null,
            "rendered": Array [
              "lab",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Challenge",
                },
                "ref": null,
                "rendered": "Challenge",
                "type": "sub",
              },
            ],
            "type": "h1",
          },
          "type": "div",
        },
        "type": "div",
      },
      "type": "header",
    },
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <header>
          <div
            className="container"
          >
            <div
              className="brand"
            >
              <h1
                className="h1"
              >
                lab
                <sub>
                  Challenge
                </sub>
              </h1>
            </div>
          </div>
        </header>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="container"
          >
            <div
              className="brand"
            >
              <h1
                className="h1"
              >
                lab
                <sub>
                  Challenge
                </sub>
              </h1>
            </div>
          </div>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="brand"
            >
              <h1
                className="h1"
              >
                lab
                <sub>
                  Challenge
                </sub>
              </h1>
            </div>,
            "className": "container",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <h1
                className="h1"
              >
                lab
                <sub>
                  Challenge
                </sub>
              </h1>,
              "className": "brand",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "lab",
                  <sub>
                    Challenge
                  </sub>,
                ],
                "className": "h1",
              },
              "ref": null,
              "rendered": Array [
                "lab",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Challenge",
                  },
                  "ref": null,
                  "rendered": "Challenge",
                  "type": "sub",
                },
              ],
              "type": "h1",
            },
            "type": "div",
          },
          "type": "div",
        },
        "type": "header",
      },
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
